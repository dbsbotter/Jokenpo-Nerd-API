// <auto-generated />
using System;
using Jokenpo.Domain.Infra.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Jokenpo.Domain.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Jokenpo.Domain.Entities.JokenpoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlayerOne")
                        .IsRequired()
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<string>("PlayerTwo")
                        .IsRequired()
                        .HasColumnType("char")
                        .HasMaxLength(1);

                    b.Property<short>("PlayerWinner")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Jokenpo");

                    b.HasCheckConstraint("CK_Jokenpos_PlayerOne", "PlayerOne = 'R' OR PlayerOne = 'P' OR PlayerOne = 'S' OR PlayerOne = 'L' OR PlayerOne = 'K'");

                    b.HasCheckConstraint("CK_Jokenpos_PlayerTwo", "PlayerTwo = 'R' OR PlayerTwo = 'P' OR PlayerTwo = 'S' OR PlayerTwo = 'L' OR PlayerTwo = 'K'");
                });
#pragma warning restore 612, 618
        }
    }
}
